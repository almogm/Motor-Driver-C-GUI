<UserControl x:Class="SuperButton.Views.OscilloscopeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Common="SuperButton.Common"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:common="clr-namespace:SuperButton.Common"
             d:DesignHeight="768"
             d:DesignWidth="1024"
             mc:Ignorable="d">

    <UserControl.Resources>

        
        
        <common:VisibleIfTypeConverter x:Key="VisibleIfTypeConverter" />
        <common:IsModifierTypeConverter x:Key="IsModifierTypeConverter" />
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


     
       <Style x:Key="DefaultToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CheckedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CheckedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid">

                            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" />
                            <Border x:Name="CheckedBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource SelectedBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" />
                            <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" Background="{DynamicResource HoverBrush}" />
                            <Border x:Name="HoverShineBorder" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" Background="{DynamicResource HoverShineBrush}" />
                            <Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource PressedBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" Background="{DynamicResource PressedBrush}" />
                            <Rectangle Opacity="1" Stroke="{x:Null}" RadiusX="3" RadiusY="3" Margin="2,2,2,2" VerticalAlignment="Stretch" Height="Auto" x:Name="Shine">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                        <GradientStop Color="#26FFFFFF" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                        <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,4,4,4" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD" />
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                                <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource BlackColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="exampleToolbarToggleButtonStyle"
           BasedOn="{StaticResource DefaultToggleButtonStyle}"
           TargetType="ToggleButton">
            <Setter Property="Padding" Value="1" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Width" Value="80" />
            <Setter Property="MaxHeight" Value="30" />
        </Style>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Margin" Value="3,2,2,2" />
        </Style>

        <Style x:Key="HintDataItemsStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="TextBlock">
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style x:Key="ChartDataItemsStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="#FF93F2C1" />
        </Style>

        <!--  Set the style for the series  -->
        <Style x:Key="LineSeriesStyle" TargetType="s:FastLineRenderableSeries">
            <Setter Property="StrokeThickness" Value="3" />
            <Setter Property="AntiAliasing" Value="True" />
            <Setter Property="SeriesColor" Value="#FFA3FFC9" />
            <Setter Property="RolloverMarkerTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Ellipse Width="9"
                                 Height="9"
                                 Fill="#7793F2C1"
                                 Stroke="#FFA3FFC9"
                                 StrokeThickness="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ChartDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           Margin="3,2,2,2"
                           Style="{StaticResource ChartDataItemsStyle}"
                           Text="{Binding SeriesName}" />
                <TextBlock Grid.Column="1"
                           Margin="0,2,2,2"
                           Style="{StaticResource ChartDataItemsStyle}"
                           Text=":" />
                <TextBlock Grid.Column="2"
                           Margin="3,2,20,2"
                           Style="{StaticResource ChartDataItemsStyle}"
                           Text="{Binding Value,
                                          StringFormat=\{0:0.0000\}}" />
            </Grid>
        </DataTemplate>

        <!--  Template for the CursorModifier tooltip to display AxisInfo collection (result of hit test)  -->
        <ControlTemplate x:Key="CursorAxisLabelTemplate" TargetType="s:TemplatableControl">
            <Border Background="#33FFFFFF"
                    BorderBrush="#FFFFFFFF"
                    BorderThickness="1"
                    CornerRadius="5">
                <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding AxisFormattedDataValue}" />
            </Border>
        </ControlTemplate>

        <!--  Template for the RolloverModifier tooltip to display AxisInfo collection (result of hit test)  -->
        <ControlTemplate x:Key="RolloverLabelTemplate" TargetType="s:TemplatableControl">
            <Border Background="#33FFFFFF"
                    BorderBrush="#FFFFFFFF"
                    BorderThickness="1"
                    CornerRadius="5">
                <StackPanel>
                    <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding SeriesName}" />
                    <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding Value}" />
                </StackPanel>
            </Border>
        </ControlTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Define the Toolbar  -->
        <StackPanel Grid.Row="0"
                    Margin="0"
                    Orientation="Horizontal">

            <TextBlock Margin="3,8"
                       Foreground="#FFF"
                       Text="Data Source:" />

            <TextBlock Text="     FPS  : " FontSize="22"   FontStyle="Normal" Foreground="White"  FontWeight="ExtraBold"/>

            <TextBlock Name="fpsCounter" FontSize="20" FontStyle="Normal" Foreground="White"  FontWeight="Bold" Width="90" Height="34" VerticalAlignment="Bottom"/>


       
            <Line Margin="5"
                  Stroke="Gray"
                  Y2="16" />

            <ToggleButton Command="{Binding SetZoomPanModifierCommand}"
                          s:ToggleButtonExtensions.GroupName="Modifiers">

                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/cursor_drag_arrow_2.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Pan" />
                </StackPanel>
            </ToggleButton>
            <ToggleButton Command="{Binding SetRubberBandZoomModifierCommand}"
                          s:ToggleButtonExtensions.GroupName="Modifiers">
                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/zoom.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Zoom" />
                </StackPanel>
            </ToggleButton>
            <ToggleButton Command="{Binding SetRolloverModifierCommand}"
                          IsChecked="{Binding IsRolloverSelected,
                                              Mode=OneWay}"
                          IsEnabled="{Binding CanExecuteRollover}"
                          s:ToggleButtonExtensions.GroupName="Modifiers">

                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/chart_line_2.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Rollover" />
                </StackPanel>
            </ToggleButton>
            <ToggleButton Command="{Binding SetCursorModifierCommand}"
                          IsChecked="{Binding IsCursorSelected,
                                              Mode=OneWay}"
                          s:ToggleButtonExtensions.GroupName="Modifiers">

                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/target.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Cursor" />
                </StackPanel>
            </ToggleButton>
            <Line Margin="5"
                  Stroke="Gray"
                  Y2="16" />

            <ToggleButton Width="95"
                          Command="{Binding SetDigitalLineCommand}"
                          IsChecked="{Binding IsDigitalLine,
                                              Mode=OneWay}"
                          Style="{StaticResource exampleToolbarToggleButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/step_line.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Is Step Line" />
                </StackPanel>
            </ToggleButton>
            <Button Command="{Binding ResetZoomCommand}" >
                <StackPanel Orientation="Horizontal">
                    <Image Margin="3"
                           Source="/Images/fit_to_size.png"
                           Stretch="None" />
                    <TextBlock Margin="3" Text="Zoom Extents" />
                </StackPanel>
            </Button>
        </StackPanel>

        <s:SciChartSurface x:Name="oscilloscopeChart"
                           Grid.Row="1"
                           Grid.RowSpan="2"
                           RenderPriority="Immediate"
                           s:ThemeManager.Theme="Oscilloscope" BorderBrush="{x:Null}">

            <!--  Declare RenderableSeries, which map 1:1 to DataSet series and in order  -->
            <s:SciChartSurface.RenderableSeries>
                <s:FastLineRenderableSeries x:Name="Channel1Series" SeriesColor="White" ResamplingMode="MinMax"/>                   
                <s:FastLineRenderableSeries DataSeries="{Binding ChartData1}"
                                            SeriesColor="Yellow"
                                            IsDigitalLine="True"
                                            ResamplingMode="None"
                                            Style="{StaticResource LineSeriesStyle}" />
            </s:SciChartSurface.RenderableSeries>

            <!--  Create default X and Y axes. Optional bands give a cool look and feel for minimal performance impact  VisibleRangeLimit="{Binding XLimit}"-->

            <!-- Create an X Axis  <s:NumericAxis AnimatedVisibleRange="{Binding AnimatedXVisibleRange, Mode=TwoWay}"   -->

          

            <s:SciChartSurface.XAxis>
                <s:NumericAxis AutoRange="Always"
                               AutoTicks="True" 
                               AxisTitle="Time (S)"
                               DrawMajorBands="False"
                               DrawMinorTicks="False"
                               DrawMinorGridLines="False"
                               TextFormatting="0.000" 
                               DrawMajorGridLines="True"
                               x:Name="xAxis"/>
            </s:SciChartSurface.XAxis >

            <!-- Create an Y Axis -->


            <s:SciChartSurface.YAxis>
                <s:NumericAxis AutoRange="Always"
                               DrawMajorGridLines="True"
                               AxisTitle="Voltage (mV)"
                               GrowBy="0.1, 0.1"
                               DrawMinorTicks="True"
                               DrawMinorGridLines="False"
                               TextFormatting="0.00" />
            </s:SciChartSurface.YAxis>

            <!--  Create ChartModifiers, which are enabled or disabled from the ViewModel via the ChartModifier property and IsModifierTypeConverter  -->
            <s:SciChartSurface.ChartModifier>
                <s:ModifierGroup>
                    <s:XAxisDragModifier />
                    <s:YAxisDragModifier />
                    <s:RolloverModifier IsEnabled="{Binding ChartModifier, Mode=TwoWay, Converter={StaticResource IsModifierTypeConverter}, ConverterParameter=Rollover}" TooltipLabelTemplate="{StaticResource RolloverLabelTemplate}" />
                    <s:ZoomPanModifier IsEnabled="{Binding ChartModifier, Mode=TwoWay, Converter={StaticResource IsModifierTypeConverter}, ConverterParameter=ZoomPan}" />
                    <s:CursorModifier AxisLabelTemplate="{StaticResource CursorAxisLabelTemplate}" IsEnabled="{Binding ChartModifier, Mode=TwoWay, Converter={StaticResource IsModifierTypeConverter}, ConverterParameter=CrosshairsCursor}" />
                    <s:RubberBandXyZoomModifier IsEnabled="{Binding ChartModifier, Mode=TwoWay, Converter={StaticResource IsModifierTypeConverter}, ConverterParameter=RubberBandZoom}" IsXAxisOnly="False" />
                    <s:MouseWheelZoomModifier />
                    <s:ZoomExtentsModifier/>
                </s:ModifierGroup>
            </s:SciChartSurface.ChartModifier>

        </s:SciChartSurface>

        <!--  Define the overlay panel to show start and to dates, chart values  -->
        
        <Grid Grid.Row="1"
              Grid.RowSpan="2"
              Margin="0"
              DataContext="{Binding ElementName=oscilloscopeChart,
                                    Path=ChartModifier[RolloverModifier]}"
              Visibility="{Binding ElementName=oscilloscopeChart,
                                    Path=DataContext.ChartModifier,
                                    Converter={StaticResource VisibleIfTypeConverter},
                                    ConverterParameter=Rollover}">
            <ItemsControl MinHeight="24"
                          VerticalAlignment="Top"
                          ItemsSource="{Binding SeriesData.SeriesInfo}"
                          ItemTemplate="{StaticResource ChartDataTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
           
        </Grid>

    </Grid>
</UserControl>
