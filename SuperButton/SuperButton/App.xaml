<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:views="clr-namespace:SuperButton.Views"
    xmlns:borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch"
    xmlns:utils="clr-namespace:ToggleSwitch.Utils;assembly=ToggleSwitch"
    xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
    xmlns:behaviors="clr-namespace:SuperButton.Behaviors"
    xmlns:helpers="clr-namespace:SuperButton.Helpers"
    mc:Ignorable="d"
	x:Class="SuperButton.App"
	StartupUri="MainWindow.xaml">
	<Application.Resources>
		<!-- Resources scoped at the Application level should be defined here. -->


        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Dictionary1.xaml" />
                <ResourceDictionary Source="Styles/ResourceDictionary1.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="OscilloscopeViewModel">
                <views:OscilloscopeView></views:OscilloscopeView>
            </DataTemplate>

           
            <DataTemplate x:Key="EnumViewModel">
                <views:EnumView></views:EnumView>
            </DataTemplate>
            <DataTemplate x:Key="EnumViewSmallFont">
                <views:EnumViewSmallFont></views:EnumViewSmallFont>
            </DataTemplate>

            <DataTemplate x:Key="EnumViewSmallFontInd">
                <views:EnumViewSmallFontInd></views:EnumViewSmallFontInd>
            </DataTemplate>
            <DataTemplate x:Key="DataViewModel">
                <views:DataView></views:DataView>
            </DataTemplate>
            <DataTemplate x:Key="DataViewSmallFont">
                <views:DataViewSmallFont></views:DataViewSmallFont>
            </DataTemplate>
            <DataTemplate x:Key="DataViewSmallFontInd">
                <views:DataViewSmallFontInd></views:DataViewSmallFontInd>
            </DataTemplate>
            <DataTemplate x:Key="IntegerUCModel">
                <views:IntegerUC></views:IntegerUC>
            </DataTemplate>

            <!--<DataTemplate x:Key="LeftPanelViewModel">
                <local:GridSplitter></local:GridSplitter>
            </DataTemplate>-->
            <Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}"/>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <DockPanel x:Name="dockPanel" Margin="0,0,0.25,0">
                                <Label  Content="Status" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0"/>
                                <Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
                                    <TextBlock Text="ON" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,2,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0" FontSize="12" FontWeight="Bold" Text="OFF" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
                                    <Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="0,1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#FF88888F" Offset="0.957"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF8AB4FF" Offset="1"/>
                                                <GradientStop Color="#FFD1E2FF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
                                        <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            
                            <DockPanel x:Name="dockPanel" Margin="0,0,0.25,0">
                                <!--<Label VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0">
                                    <Setter Property="Content" Value="hello"/>
                                </Label>-->
                                <Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
                                    <TextBlock Text="I" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,15,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="15,0,0,0" FontSize="12" FontWeight="Bold" Text="O" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
                                    <Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="0,1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <GradientStop Color="#FF88888F" Offset="0.957"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF8AB4FF" Offset="1"/>
                                                <GradientStop Color="#FFD1E2FF" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <ControlTemplate x:Key="ActionButton" TargetType="{x:Type Button}">
            <Border x:Name="border1" BorderBrush="#FFFFFFFF" BorderThickness="1.2" CornerRadius="4,4,4,4" Background="{x:Null}" Opacity="0.8" OpacityMask="Black" Width="70" Height="70">
                <Border x:Name="border" Background="#7F060606" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.507*"/>
                            <RowDefinition Height="0.493*"/>
                        </Grid.RowDefinitions>
                        <Image x:Name="image" Margin="0" Grid.Row="0" Source="Properties/alt-parameters-icone-9469-64.png" Stretch="Fill" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Height="64" Width="64" Opacity="1"/>
                    	<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                    		<Border.Background>
                    			<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                    				<GradientStop Color="#99FFFFFF" Offset="0"/>
                    				<GradientStop Color="#33FFFFFF" Offset="1"/>
                    			</LinearGradientBrush>
                    		</Border.Background>
                    	</Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
        			<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
        			<Trigger Property="IsPressed" Value="True">
        				<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
        				<Setter Property="Background" TargetName="border" Value="#CC000000"/>
        			</Trigger>
        			<Trigger Property="IsMouseOver" Value="True"/>
        		</ControlTemplate.Triggers>
        </ControlTemplate>
        	<Style x:Key="MotorOnCheckBoxStyle" TargetType="{x:Type CheckBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type CheckBox}">
        					<ControlTemplate.Resources>
        						<Storyboard x:Key="OnChecking">
        							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
        								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="29.125"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFC5F7B7"/>
        							</ColorAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF257E29"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        						<Storyboard x:Key="OnUnchecking">
        							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
        								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-0.875"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
        								<SplineThicknessKeyFrame KeyTime="00:00:00.3000000" Value="1,1,1,1"/>
        							</ThicknessAnimationUsingKeyFrames>
        							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="slider">
        								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.04"/>
        							</DoubleAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1666EA"/>
        							</ColorAnimationUsingKeyFrames>
        							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="slider">
        								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB7D0FD"/>
        							</ColorAnimationUsingKeyFrames>
        						</Storyboard>
        					</ControlTemplate.Resources>

        					<DockPanel x:Name="dockPanel" Margin="0,0,0.25,0">
        						<Label  Content="Status" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left" Margin="0"/>
        						<Grid Margin="5,0,0,0" Width="53.875" Background="{x:Null}" HorizontalAlignment="Right">
        							<TextBlock Text="ON" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" HorizontalAlignment="Right" Margin="0,0,2,0" Foreground="#FFF9F9F9" VerticalAlignment="Center"/>
        							<TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0" FontSize="12" FontWeight="Bold" Text="OFF" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center"/>
        							<Border HorizontalAlignment="Left" x:Name="slider" Width="24" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" RenderTransformOrigin="0.5,0.5" Margin="0,1">
        								<Border.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform ScaleX="1" ScaleY="1"/>
        										<SkewTransform AngleX="0" AngleY="0"/>
        										<RotateTransform Angle="0"/>
        										<TranslateTransform X="0" Y="0"/>
        									</TransformGroup>
        								</Border.RenderTransform>
        								<Border.BorderBrush>
        									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        										<GradientStop Color="#FFFFFFFF" Offset="0"/>
        										<GradientStop Color="#FF88888F" Offset="0.957"/>
        									</LinearGradientBrush>
        								</Border.BorderBrush>
        								<Border.Background>
        									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        										<GradientStop Color="#FF8AB4FF" Offset="1"/>
        										<GradientStop Color="#FFD1E2FF" Offset="0"/>
        									</LinearGradientBrush>
        								</Border.Background>
        							</Border>
        						</Grid>
        					</DockPanel>

        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="True">
        							<Trigger.ExitActions>
        								<BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
        							</Trigger.ExitActions>
        							<Trigger.EnterActions>
        								<BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
        							</Trigger.EnterActions>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
            <Style x:Key="MetroToggleSwitchStyle" TargetType="{x:Type ToggleSwitch:HorizontalToggleSwitch}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="88"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="BorderBrush" Value="#FFBEBEBE"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0,4"/>
                <Setter Property="UncheckedForeground" Value="#FF5C5C5C"/>
                <Setter Property="CheckedForeground" Value="White"/>
                <Setter Property="ThumbSize" Value="42"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="CheckedBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF81B5FB" Offset="1"/>
                            <GradientStop Color="#FF5D9FF2" Offset="0.50"/>
                            <GradientStop Color="#FF569BEF" Offset="0.50"/>
                            <GradientStop Color="#FF3772B9"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="UncheckedBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFBBBBBB" Offset="0"/>
                            <GradientStop Color="#FFE1E2E2" Offset="0.5"/>
                            <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="ThumbBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD8D7D8"/>
                            <GradientStop Color="#FFFDFCFD" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleSwitch:HorizontalToggleSwitch}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledOverlay">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.10" To="Unchecked"/>
                                            <VisualTransition GeneratedDuration="0:0:0.10" To="Checked"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Checked"/>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="DraggingChecked"/>
                                        <VisualState x:Name="DraggingUnchecked"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <borders:ClippingBorder x:Name="SwitchRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" IsTabStop="False">
                                    <Canvas MinWidth="{TemplateBinding ThumbSize}" MinHeight="{TemplateBinding FontSize}">
                                        <utils:ActualSizePropertyProxy x:Name="ActualSizeProxy" Element="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
                                        <Grid x:Name="SwitchTrack" Cursor="Hand" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" Margin="0,-1,0,0">
                                            <StackPanel Orientation="Horizontal">
                                                <Border Background="{TemplateBinding CheckedBackground}" Margin="-1,0,0,0" Padding="1,0,0,0">
                                                    <ContentControl x:Name="SwitchChecked" Content="{TemplateBinding CheckedContent}" Foreground="{TemplateBinding CheckedForeground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="Center" IsTabStop="False" Margin="{TemplateBinding Padding}" Padding="0,0,22,0" Template="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="Center"/>
                                                </Border>
                                                <Border Background="{TemplateBinding UncheckedBackground}" Margin="-1,0,0,0">
                                                    <ContentControl x:Name="SwitchUnchecked" Content="{TemplateBinding UncheckedContent}" Foreground="{TemplateBinding UncheckedForeground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="Center" IsTabStop="False" Margin="{TemplateBinding Padding}" Template="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="Center"/>
                                                </Border>
                                            </StackPanel>
                                        </Grid>
                                        <borders:InnerGlowBorder BorderThickness="0" Background="#00000000" CornerRadius="4" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" IsHitTestVisible="False" IsTabStop="False" InnerGlowOpacity="0.25" InnerGlowColor="Black" InnerGlowSize="2,4,2,0" Margin="-1,-1,0,0" Width="{Binding ActualWidthValue, ElementName=ActualSizeProxy, Mode=OneWay}"/>
                                        <Thumb x:Name="SwitchThumb" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding ThumbBrush}" Cursor="Hand" Foreground="#FF359CE6" HorizontalAlignment="Left" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" IsTabStop="False" Margin="0,-1,0,0" Template="{TemplateBinding ThumbTemplate}" Width="{TemplateBinding ThumbSize}"/>
                                    </Canvas>
                                </borders:ClippingBorder>
                                <Border x:Name="DisabledOverlay" Background="#AAEEEEEE" CornerRadius="4" Visibility="Collapsed"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ThumbControlTemplateMotorOn" TargetType="{x:Type Thumb}">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="path"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <borders:OuterGlowBorder BorderThickness="0" Background="Transparent" CornerRadius="1" OuterGlowColor="Black" OuterGlowSize="4" OuterGlowOpacity="0.15" ShadowCornerRadius="8">
                        <Grid>
                            <borders:ClippingBorder x:Name="Background" Background="White" CornerRadius="0.5" BorderBrush="#FFE2DDDD" BorderThickness="0.3" ClipContent="False">
                                <borders:ClippingBorder.Effect>
                                    <DropShadowEffect Color="#FF488D54" Direction="350" ShadowDepth="38"/>
                                </borders:ClippingBorder.Effect>
                                <Border BorderBrush="#FFEBEBEB" BorderThickness="1" CornerRadius="1" Background="#FF150E0E" Opacity="0.9">
                                    <Path x:Name="path" Data="M3.6,2.6L10,2.6 10,6.6 3.6,6.6z M10,0L15.5,4.6 10,9.4z" Fill="#AAFBFBFB" Margin="7,5" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0">
                                        <Path.RenderTransform>
                                            <ScaleTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                            </borders:ClippingBorder>
                            <borders:ClippingBorder x:Name="BackgroundAnimation" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="Black" CornerRadius="0.5" Opacity="0" d:IsHidden="True"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="True" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1" d:IsHidden="True"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="4" RadiusX="4" d:IsHidden="True"/>
                        </Grid>
                    </borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>
            <Style x:Key="FocusVisualStyleMotorON" TargetType="{x:Type Control}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid Visibility="Collapsed"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MotorOnStyleofTumb" TargetType="{x:Type ToggleSwitch:HorizontalToggleSwitch}">
            	<Setter Property="Foreground" Value="White"/>
            	<Setter Property="Width" Value="88"/>
            	<Setter Property="Height" Value="28"/>
            	<Setter Property="BorderBrush" Value="#FFBEBEBE"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Padding" Value="0,4"/>
            	<Setter Property="UncheckedForeground" Value="#FF5C5C5C"/>
            	<Setter Property="CheckedForeground" Value="White"/>
            	<Setter Property="ThumbSize" Value="42"/>
            	<Setter Property="FontWeight" Value="SemiBold"/>
            	<Setter Property="FontFamily" Value="Arial"/>
            	<Setter Property="FontSize" Value="12"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center" />
            	<Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="CheckedBackground">
            		<Setter.Value>
            			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            				<GradientStop Color="#FF81B5FB" Offset="1"/>
            				<GradientStop Color="#FF5D9FF2" Offset="0.50"/>
            				<GradientStop Color="#FF569BEF" Offset="0.50"/>
            				<GradientStop Color="#FF3772B9"/>
            			</LinearGradientBrush>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="UncheckedBackground">
            		<Setter.Value>
            			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            				<GradientStop Color="#FFBBBBBB" Offset="0"/>
            				<GradientStop Color="#FFE1E2E2" Offset="0.5"/>
            				<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
            				<GradientStop Color="White" Offset="1"/>
            			</LinearGradientBrush>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="ThumbBrush">
            		<Setter.Value>
            			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            				<GradientStop Color="#FFD8D7D8"/>
            				<GradientStop Color="#FFFDFCFD" Offset="1"/>
            			</LinearGradientBrush>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleSwitch:HorizontalToggleSwitch}">
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="Disabled">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledOverlay">
            										<DiscreteObjectKeyFrame KeyTime="0">
            											<DiscreteObjectKeyFrame.Value>
            												<Visibility>Visible</Visibility>
            											</DiscreteObjectKeyFrame.Value>
            										</DiscreteObjectKeyFrame>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="MouseOver"/>
            							<VisualState x:Name="Pressed"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.10" To="Unchecked"/>
            								<VisualTransition GeneratedDuration="0:0:0.10" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked"/>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="DraggingChecked"/>
            							<VisualState x:Name="DraggingUnchecked"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<borders:ClippingBorder x:Name="SwitchRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" IsTabStop="False">
            						<Canvas MinWidth="{TemplateBinding ThumbSize}" MinHeight="{TemplateBinding FontSize}">
            							<utils:ActualSizePropertyProxy x:Name="ActualSizeProxy" Element="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"/>
            							<Grid x:Name="SwitchTrack" Cursor="Hand" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" Margin="0,-1,0,0">
            								<StackPanel Orientation="Horizontal">
            									<Border Background="{TemplateBinding CheckedBackground}" Margin="-1,0,0,0" Padding="1,0,0,0">
            										<ContentControl x:Name="SwitchChecked" Content="{TemplateBinding CheckedContent}" Foreground="{TemplateBinding CheckedForeground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="Center" IsTabStop="False" Margin="{TemplateBinding Padding}" Padding="0,0,22,0" Template="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="Center"/>
            									</Border>
            									<Border Background="{TemplateBinding UncheckedBackground}" Margin="-1,0,0,0">
            										<ContentControl x:Name="SwitchUnchecked" Content="{TemplateBinding UncheckedContent}" Foreground="{TemplateBinding UncheckedForeground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="Center" IsTabStop="False" Margin="{TemplateBinding Padding}" Template="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="Center"/>
            									</Border>
            								</StackPanel>
            							</Grid>
            							<borders:InnerGlowBorder BorderThickness="0" Background="#00000000" CornerRadius="4" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" IsHitTestVisible="False" IsTabStop="False" InnerGlowOpacity="0.25" InnerGlowColor="Black" InnerGlowSize="2,4,2,0" Margin="-1,-1,0,0" Width="{Binding ActualWidthValue, ElementName=ActualSizeProxy, Mode=OneWay}"/>
            							<Thumb x:Name="SwitchThumb" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding ThumbBrush}" Cursor="Hand" Foreground="#FF359CE6" HorizontalAlignment="Left" Height="{Binding ActualHeightValue, ElementName=ActualSizeProxy, Mode=OneWay}" IsTabStop="False" Margin="0,-1,0,0" Template="{TemplateBinding ThumbTemplate}" Width="{TemplateBinding ThumbSize}"/>
            						</Canvas>
            					</borders:ClippingBorder>
            					<Border x:Name="DisabledOverlay" Background="#AAEEEEEE" CornerRadius="4" Visibility="Collapsed"/>
            				</Grid>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="EnumUCStyleLeftPanel" TargetType="{x:Type views:EnumUC}">
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type views:EnumUC}">
            				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            					<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Stretch"/>
            				</Border>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="imageListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="toolbarButtonTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="12" />
            </Style>
            
            
            
            
            <Style x:Key="GroupsListBoxStyle" TargetType="ListBox">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="helpers:AttachableInteractionClasses.Behaviors">
                    <Setter.Value>
                        <helpers:BehaviorsCollection>
                            <behaviors:ListBoxMouseWheelScrollingBehavior />
                        </helpers:BehaviorsCollection>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="listItemBorderBrush" Color="#FF616161" />
            
            <Style x:Key="groupsListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Padding" Value="3" />
                <Setter Property="Margin" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="#BB222222" />
                <Setter Property="Opacity" Value="1.0" />
                <Setter Property="BorderBrush" Value="{StaticResource listItemBorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">

                            <Border Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".55" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

               <!--<Style x:Key="exampleTooltipStyle" TargetType="ToolTip">
        <Setter Property="Background" Value="#FFBDBEBE" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Opacity" Value="0.95" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="ToolTip">

                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius=
            
                            Opacity="{TemplateBinding Opacity}">

                        <Grid Name="grid"
                              MaxWidth="500"
                              Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Margin="10,5,0,0" Orientation="Horizontal">
                                <Image VerticalAlignment="Center"
                                       Source="{Binding IconPath}"
                                       Stretch="None" />

                                <TextBlock Margin="5,0,0,0"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{StaticResource treeViewGroupHeaderTextStyle}"
                                           Text="{Binding ExampleDisplayName,
                                                          FallbackValue='Example Name'}" />
                            </StackPanel>

                            <StackPanel Grid.Row="1"
                                        Margin="10"
                                        Orientation="Horizontal">
                                <Image Width="200"
                                       Height="150"
                                       VerticalAlignment="Top"
                                       Source="{Binding ExampleImagePath}"
                                       Stretch="Fill" />

                                <TextBlock MaxWidth="280"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{StaticResource toolbarButtonTextStyle}"
                                           Text="{Binding ExampleToolTipDescription,
                                                          FallbackValue='Example Description Example Description Example Description Example Description Example Description Example Description Example Description Example Description'}"
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
            
            <!--<Style x:Key="groupHeaderTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Property="FontFamily" Value="/Abt.Controls.SciChart.Example;component/Resources/Fonts/NEUROPOL.ttf#Neuropol" />
                <Setter Property="FontSize" Value="25" />
            </Style>-->























            <!--<Style x:Key="exampleTooltipStyle" TargetType="ToolTip">
                <Setter Property="Background" Value="#FFBDBEBE" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="#FF333333" />
                <Setter Property="Opacity" Value="0.95" />
                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="ToolTip">

                            <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="7"
                            Opacity="{TemplateBinding Opacity}">

                                <Grid Name="grid"
                              MaxWidth="500"
                              Background="Transparent">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <StackPanel Margin="10,5,0,0" Orientation="Horizontal">
                                        <Image VerticalAlignment="Center"
                                       Source="{Binding IconPath}"
                                       Stretch="None" />

                                        <TextBlock Margin="5,0,0,0"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{StaticResource treeViewGroupHeaderTextStyle}"
                                           Text="{Binding ExampleDisplayName,
                                                          FallbackValue='Example Name'}" />
                                    </StackPanel>

                                    <StackPanel Grid.Row="1"
                                        Margin="10"
                                        Orientation="Horizontal">
                                        <Image Width="200"
                                       Height="150"
                                       VerticalAlignment="Top"
                                       Source="{Binding ExampleImagePath}"
                                       Stretch="Fill" />

                                        <TextBlock MaxWidth="280"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{StaticResource toolbarButtonTextStyle}"
                                           Text="{Binding ExampleToolTipDescription,
                                                          FallbackValue='Example Description Example Description Example Description Example Description Example Description Example Description Example Description Example Description'}"
                                           TextWrapping="Wrap" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

           
            <!--<SolidColorBrush x:Key="listBoxItemHoverStyle" Color="#7FFFFFFF" />
            <Style x:Key="examplesListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Padding" Value="0,0,10,2" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid>
                                <Rectangle x:Name="hover"
                                   Fill="{StaticResource listBoxItemHoverStyle}"
                                   Opacity="0"
                                   RadiusX="7"
                                   RadiusY="7"
                                   Visibility="Visible"/>

                                <StackPanel x:Name="host"
                                    Margin="20,0,0,0"
                                    Orientation="Horizontal">

                                    --><!--  Bullet marker  --><!--
                                    <Ellipse Width="5"
                                     Height="5"
                                     Margin="0,2,10,2"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Fill="{StaticResource TextBrush}" />

                                    <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />

                                </StackPanel>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="hover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".55" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ToolTipService.ToolTip>
                                    <ToolTip Style="{StaticResource exampleTooltipStyle}" />
                                </ToolTipService.ToolTip>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!--Stroke="#FF616161"
                   Margin="0,1" 
                   Height="5" 
                   StrokeThickness="0.5">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="15.521,12.983" MappingMode="Absolute" StartPoint="1183.984,12.01">
                    <GradientStop Offset="1" Color="#00B8BDCF"/>
                    <GradientStop Color="White" Offset="0.534"/>
                    <GradientStop Color="#00AAB3CD"/>
                </LinearGradientBrush>
            </Rectangle.Fill>-->

        </ResourceDictionary>
    </Application.Resources>
</Application>



        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/ExpressionDark.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/Brushes.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/Button.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/ExampleStyles.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/ListBoxItem.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/TextBlock.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/ToolTip.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/TransitioningFrame.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/TreeViewItem.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/ToggleButton.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/AutoCompleteBox.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/TabControl.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/TabItem.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/ListBox.xaml" />
                <ResourceDictionary Source="Resources/Xaml/Styles/SciChartExampleToolbar.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->
  