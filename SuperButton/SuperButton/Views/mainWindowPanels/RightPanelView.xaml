<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:common="clr-namespace:SuperButton.Common"
    xmlns:superButton="clr-namespace:SuperButton.Views"
    xmlns:toggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:Borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch"
    mc:Ignorable="d"
	x:Class="SuperButton.Views.mainWindowPanels.RightPanel"
	x:Name="UserControl" d:DesignHeight="480" MaxWidth="189">


    <UserControl.Resources>

        <!--Glass Button control template-->


        <ControlTemplate x:Key="GlassButton" TargetType="{x:Type Button}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Timeline1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Timeline2">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" Background="{x:Null}" Opacity="1">
                <Border x:Name="border" Background="#7F060606" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.507*"/>
                            <RowDefinition Height="0.493*"/>
                        </Grid.RowDefinitions>
                        <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                            <Border.Background>
                                <RadialGradientBrush>
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="-0.368" Y="-0.152"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Color="#B28DBDFF" Offset="0"/>
                                    <GradientStop Color="#008DBDFF" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
                        <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                    <GradientStop Color="#33FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                    <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                    <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  BackgroundBrush  -->
        <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF333333" />

        <!--  ExampleListBoxItem  -->
        <ControlTemplate x:Key="ExampleListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
            <Grid x:Name="exampleListItemGrid"
        		Width="255"
        		Height="93"
        		Margin="10,10,10,10">
                <Grid.Resources>
                    <Storyboard x:Key="MouseLeave">
                        <ThicknessAnimationUsingKeyFrames FillBehavior="Stop"
        					Storyboard.TargetName="exampleListItemGrid"
        					Storyboard.TargetProperty="(FrameworkElement.Margin)">
                            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="10,10,10,10" />
                        </ThicknessAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames FillBehavior="Stop"
        					Storyboard.TargetName="mainRect"
        					Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="10" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="MouseEnter">
                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="exampleListItemGrid" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="15,15,5,5" />
                        </ThicknessAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mainRect" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="2" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <LinearGradientBrush x:Key="mainRectBrush" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5, 1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#FF4C4C4C" />
                                <GradientStop Offset="1" Color="#FF0E0E0E" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="lowerRectBrush" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Offset="0" Color="#00373737" />
                                <GradientStop Offset="1" Color="#9FFFFFFF" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="topPathBrush" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="1" Color="#00373737" />
                        <GradientStop Color="#9FFFFFFF" />
                    </LinearGradientBrush>
                </Grid.Resources>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="exampleListItemGrid">
                        <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}" />
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="exampleListItemGrid">
                        <BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource MouseLeave}" />
                    </EventTrigger>
                </Grid.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.LayoutTransform>
                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                </Grid.LayoutTransform>

                <Rectangle x:Name="mainRect"
        			Grid.RowSpan="2"
        			Width="254"
        			Height="92"
        			HorizontalAlignment="Left"
        			VerticalAlignment="Top"
        			Fill="{StaticResource mainRectBrush}"
        			RadiusX="15"
        			RadiusY="15"
        			Stroke="#FF515151"
        			StrokeMiterLimit="4"
        			StrokeThickness="1.5">
                    <Rectangle.Effect>
                        <DropShadowEffect BlurRadius="10"
        					Direction="315"
        					ShadowDepth="10"
        					Color="#FF222222" />
                    </Rectangle.Effect>
                </Rectangle>
                <Rectangle x:Name="lowerGlowRect"
        			Grid.RowSpan="2"
        			Width="236"
        			Height="10.334"
        			Margin="10,0,8,8.999"
        			VerticalAlignment="Bottom"
        			Fill="{StaticResource lowerRectBrush}"
        			Opacity="0.3"
        			RadiusX="15"
        			RadiusY="4.2242112">
                    <Rectangle.Effect>
                        <BlurEffect Radius="2" />
                    </Rectangle.Effect>
                </Rectangle>
                <Path x:Name="upperHighlightPath"
        			Grid.RowSpan="2"
        			Width="248"
        			Height="46"
        			Margin="3,3,0,0"
        			HorizontalAlignment="Left"
        			VerticalAlignment="Top"
        			Fill="{DynamicResource topPathBrush}"
        			Opacity="0.5"
        			Stretch="Fill">
                    <Path.Data>
                        <PathGeometry Figures="m 226.27089 456.37017 c -8.12478 0 -14.66567 4.471 -14.66567 13.1301 l 0 9.6637 c 95.61369 31.5211 158.83275 32.3558 248.33869 -0.9117 l 0 -8.252 c 0 -8.6591 -6.54089 -13.6301 -14.66567 -13.6301 z" FillRule="NonZero" />
                    </Path.Data>
                </Path>

                <Viewbox Grid.Row="0"
        			Margin="10,5,10,0"
        			HorizontalAlignment="Left"
        			Stretch="Uniform">
                    <TextBlock Grid.Row="0"
        				Height="26"
        				VerticalAlignment="Top"
        				FontFamily="pack://application:,,,/Resources/Fonts/#Neuropol Regular"
        				FontSize="16"
        				Foreground="White"
        				Text="{Binding ExampleDisplayName}" />
                </Viewbox>

                <TextBlock Grid.Row="1"
        			Margin="10,0"
        			VerticalAlignment="Top"
        			FontFamily="Verdana"
        			Foreground="White"
        			Text="{Binding ExampleToolTipDescription}"
        			TextWrapping="Wrap" />

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:1"
                                            From="#FF515151"
                                            Storyboard.TargetName="mainRect"
                                            Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                            To="#FFed7b00" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard FillBehavior="Stop">
                                <ColorAnimation Duration="0:0:1"
                                            From="#FFed7b00"
                                            Storyboard.TargetName="mainRect"
                                            Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                            To="#FF515151" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  Vertical GridSplitter Handle  -->
        <Style x:Key="VerticalGridSplitterHandleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Root">

                            <!--  VSM  -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="Normal" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="0.4" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="180" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--  Background  -->
                                <Border x:Name="BackgroundBorder"
        							HorizontalAlignment="Stretch"
        							VerticalAlignment="Stretch"
        							Background="Gray"
        							BorderBrush="#FF000000"
        							BorderThickness="0"
        							CornerRadius="3"
        							Opacity="0" />

                                <!--  Vertical Handle Icon  -->
                                <Path HorizontalAlignment="Center"
        							VerticalAlignment="Center"
        							Data="M0,0 L0,6 L3,3 Z"
        							Fill="Black"
        							RenderTransformOrigin="0.5,0.5"
        							Stroke="Black">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="IconRotateTransform" Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ToggleButton  -->
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
            <Setter Property="Foreground" Value="#FF000000" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="BorderThickness" Value="2" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
                                        <VisualTransition From="Normal"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="MouseOver" />
                                        <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Normal" />
                                        <VisualTransition From="Pressed"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="MouseOver" />
                                        <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Checked"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Unchecked" />
                                        <VisualTransition From="Unchecked"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="Checked" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                				Duration="00:00:00.0010000"
                                				Storyboard.TargetName="CheckedBorder"
                                				Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.4" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Focused"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Unfocused" />
                                        <VisualTransition From="Unfocused"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="Focused" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                				Storyboard.TargetName="FocusVisualElement"
                                				Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                				Duration="00:00:00.0010000"
                                				Storyboard.TargetName="FocusVisualElement"
                                				Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3" />
                            <Border x:Name="HoverBorder"
                                Background="{StaticResource TextBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Opacity="0" />
                            <Border x:Name="CheckedBorder"
                                Background="#FF000000"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Border x:Name="DisabledVisualElement"
                                Background="#A5FFFFFF"
                                CornerRadius="3"
                                IsHitTestVisible="false"
                                Opacity="0" />
                            <Border x:Name="FocusVisualElement"
                                
                                BorderThickness="1"
                                CornerRadius="3"
                                IsHitTestVisible="false"
                                Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Horizontal GridSplitter Handle  -->
        <Style x:Key="HorizontalGridSplitterHandleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Root">

                            <!--  VSM  -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <System:String xml:space="preserve">.\sqlexpress </System:String>
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="Normal" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="180" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--  Background  -->
                                <Border x:Name="BackgroundBorder"
        							HorizontalAlignment="Stretch"
        							VerticalAlignment="Stretch"
        							Background="Gray"
        							BorderBrush="#FF000000"
        							BorderThickness="0"
        							CornerRadius="3"
        							Opacity="0" />

                                <!--  Vertical Handle Icon  -->
                                <Path HorizontalAlignment="Center"
        							VerticalAlignment="Center"
        							Data="M0,0 L6,0 L3,3 Z"
        							Fill="Black"
        							RenderTransformOrigin="0.5,0.5"
        							Stroke="Black">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="IconRotateTransform" Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  GridSplitter Preview  -->
        <Style x:Key="GridSplitterPreviewStyle" TargetType="{x:Type Control}">
            <Setter Property="Background" Value="#FF868686" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid x:Name="Root"
        					MaxWidth="50"
        					MaxHeight="50"
        					Opacity=".5">

                            <!--  Background  -->
                            <Rectangle Fill="{TemplateBinding Background}" />

                            <!--  Horizontal Template  -->
                            <Grid x:Name="HorizontalTemplate" Height="6" Visibility="Collapsed">
                                <!--  Just show the faint gray grid splitter rectangle with no other details  -->
                            </Grid>

                            <!--  Vertical Template  -->
                            <Grid x:Name="VerticalTemplate" Width="6">
                                <!--  Visibility="Collapsed" Just show the faint gray grid splitter rectangle with no other details  -->
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!--  ExtendedGridSplitter  -->
        <Style TargetType="{x:Type common:CollapsableGridSplitter}">
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="IsTabStop" Value="true" />
            <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
            <Setter Property="VerticalHandleStyle" Value="{StaticResource VerticalGridSplitterHandleStyle}" />
            <Setter Property="HorizontalHandleStyle" Value="{StaticResource HorizontalGridSplitterHandleStyle}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type common:CollapsableGridSplitter}">
                        <ControlTemplate.Resources>
                            <LinearGradientBrush x:Key="splitterBackgroundBrush" MappingMode="RelativeToBoundingBox" StartPoint="0,1" EndPoint="1,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="#FF222222" />
                                        <GradientStop Offset="0.4" Color="#FF434343" />
                                        <GradientStop Offset="0.6" Color="#FF434343" />
                                        <GradientStop Offset="1" Color="#FF222222" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">

                            <!--  VSM  -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                				Storyboard.TargetName="Root"
                                				Storyboard.TargetProperty="Opacity"
                                				To="0.5" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <!--
                                            <DoubleAnimation Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        -->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!--  Background  -->
                            <Rectangle x:Name="GridSplitterBackground"
                        		Fill="{StaticResource splitterBackgroundBrush}"
                        		Stroke="#FF222222"
                        		StrokeMiterLimit="4"
                        		StrokeThickness="1" />

                            <!--  Horizontal Template  -->
                            <Grid x:Name="HorizontalTemplate" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  Horizontal GridSplitter Handle  -->
                                <ToggleButton x:Name="HorizontalGridSplitterHandle"
                        			Grid.Column="1"
                        			IsHitTestVisible="True"
                        			RenderTransformOrigin="0.5,0.5"
                        			Style="{TemplateBinding HorizontalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleY="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>

                            <!--  Vertical Template  -->
                            <Grid x:Name="VerticalTemplate">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--  Vertical GridSplitter Handle  -->
                                <ToggleButton x:Name="VerticalGridSplitterHandle"
                        			Grid.Row="1"
                        			IsHitTestVisible="True"
                        			RenderTransformOrigin="0.5,0.5"
                        			Style="{TemplateBinding VerticalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleX="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>

                            <!--  Focus Visual  -->
                            <Rectangle x:Name="FocusVisual"
                        		IsHitTestVisible="false"
                        		Opacity="0"
                        		Stroke="#FF6DBDD1"
                        		StrokeThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="rectangleStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="RadiusX" Value="2" />
            <Setter Property="RadiusY" Value="2" />
            <Setter Property="Opacity" Value="1.0" />
            <Setter Property="Fill" Value="#BB222222" />
            <Setter Property="Margin" Value="10,10,10,5" />
            <Setter Property="Stroke" Value="#616161" />
            <Setter Property="StrokeThickness" Value="1" />
        </Style>

        <ControlTemplate x:Key="ThumbControlTemplateMotorOn" TargetType="{x:Type Thumb}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="OnLoaded1">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid Background="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Glow">
                                    <EasingColorKeyFrame KeyTime="0" Value="#4C8DBDFF"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Shine">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="path"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Borders:OuterGlowBorder BorderThickness="0" Background="Transparent" CornerRadius="1" OuterGlowColor="Black" OuterGlowSize="4" OuterGlowOpacity="0.15" ShadowCornerRadius="8">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="#FFEBEBEB" BorderThickness="1" CornerRadius="1" Background="#FC150E0E" Opacity="1" Margin="0,0,0.6,0.6" Grid.RowSpan="2"/>
                        <Border x:Name="Glow" BorderBrush="{x:Null}" BorderThickness="1.4" HorizontalAlignment="Left" Height="28" Grid.RowSpan="2" VerticalAlignment="Top" Width="23" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush RadiusX="0.685" RadiusY="0.938" Center="0.505,0.939" GradientOrigin="0.505,0.939">
                                    <GradientStop Color="#B28DBDFF"/>
                                    <GradientStop Color="#B28DBDFF" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="Content" BorderBrush="#FFEBEBEB" BorderThickness="1" CornerRadius="1" Background="{x:Null}" Opacity="1" Margin="0,0,0.6,0.6" Grid.RowSpan="2">
                            <Path x:Name="path" Data="M3.6,2.6L10,2.6 10,6.6 3.6,6.6z M10,0L15.5,4.6 10,9.4z" Fill="#FFFBFBFB" Margin="7,5" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0">
                                <Path.RenderTransform>
                                    <ScaleTransform/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <Border x:Name="Shine" Margin="0,0,0.5,0" Grid.RowSpan="1" CornerRadius="1,0,0,0" Width="20.3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#99F0EBEB" Offset="0"/>
                                    <GradientStop Color="#33FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Borders:ClippingBorder x:Name="BackgroundAnimation" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="Black" CornerRadius="0.5" Opacity="0" Grid.RowSpan="2" d:IsHidden="True"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="4" RadiusX="4" Grid.RowSpan="2" d:IsHidden="True"/>
                    </Grid>
                </Borders:OuterGlowBorder>
            </Grid>
        </ControlTemplate>

    </UserControl.Resources>

    <!--LayOutRoot-->

    <Grid x:Name="LayoutRoot" MaxWidth="189">
        <Grid.ColumnDefinitions>

            <ColumnDefinition/>

            <ColumnDefinition Width="Auto" MaxWidth="180"/>

        </Grid.ColumnDefinitions>



        <Rectangle  Style="{StaticResource rectangleStyle}" Grid.Column="1" Margin="0" Width="180" Opacity="0.3" >
            <Rectangle.Fill>
                <ImageBrush  ImageSource="/SuperButton;component/Images/Backgrounds/HomeBackground.jpg"   Stretch="UniformToFill"/>
            </Rectangle.Fill>
        </Rectangle>


        <!--<StackPanel Grid.Column="1" Margin="0" Width="180">
			<toggleSwitch:HorizontalToggleSwitch x:Name="horizontalToggleSwitch"
				BorderBrush="White"
				Width="164" 
				UncheckedBackground="#B2F9F9F9" 
				UncheckedForeground="#FF333330" 
				ThumbSize="23" HorizontalAlignment="Center" Margin="0,7,0,0" CheckedContent="DRIVE ON" UncheckedContent="DRIVE OFF" BorderThickness="0.5" Elasticity="6" CheckedBackground="#7F000000" CheckedForeground="#FFF7F6F6"
				Style="{DynamicResource MotorOnStyleofTumb}" ThumbTemplate="{DynamicResource ThumbControlTemplateMotorOn}">
				<toggleSwitch:HorizontalToggleSwitch.ThumbBrush>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#FF4D4E48"/>
						<GradientStop Color="#FF333430" Offset="1"/>
						<GradientStop Color="#FF333330" Offset="0.021"/>
					</LinearGradientBrush>
				</toggleSwitch:HorizontalToggleSwitch.ThumbBrush>
			</toggleSwitch:HorizontalToggleSwitch>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Loger:" VerticalAlignment="Center" Margin="0,10,0,0" Foreground="#FFF1F0F0"/>
			<RichTextBox HorizontalAlignment="Center" Height="200" VerticalAlignment="Center" Width="164" Margin="0,2,0,10">
				<FlowDocument>
					<Paragraph><Run Text="RichTextBox"/></Paragraph>
				</FlowDocument>
			</RichTextBox>
			-->
        <!--Connect superButton-->
        <!--
			<Button Content="{Binding ConnectButtonContent, Mode=TwoWay}"
				BorderThickness="5,1" 
				Command="{Binding SetAutoConnectActionCommandCommand}" 
				Template="{DynamicResource GlassButton}" 
				Foreground="White" 
				Height="30" 
				Margin="8,10,8,1" 
				FontFamily="Bell MT" 
				FontSize="18.667"/>
			-->
        <!--ComboTest-->
        <!--
			<Button Content="{Binding SendButtonContent, Mode=TwoWay}"
				BorderThickness="5,1" 
				Command="{Binding SendActionCommand}" 
				Template="{DynamicResource GlassButton}" 
				Foreground="White" 
				Height="30" 
				Margin="8,2,8,0" 
				FontFamily="Bell MT" 
				FontSize="18.667"/>
			<superButton:EnumUC Height="30" Margin="5,2,5,5" Width="164"/>
		</StackPanel>-->

        <common:CollapsableGridSplitter Grid.Column="0"
			Width="9"
			Margin="0,0,0,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Stretch"
			CollapseMode="Next"
			IsCollapsed="False"
			IsTabStop="False" 
            ResizeDirection="Columns" 
            ScrollViewer.HorizontalScrollBarVisibility="Visible" 
            HorizontalContentAlignment="Right" 
            ScrollViewer.VerticalScrollBarVisibility="Disabled" 
            Cursor="SizeWE" />


    </Grid>
</UserControl>