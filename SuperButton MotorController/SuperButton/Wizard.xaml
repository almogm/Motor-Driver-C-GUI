<Window x:Class="SuperButton.Views.Wizard"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SuperButton"
        xmlns:led="clr-namespace:SuperButton.Views"
        xmlns:viewModels="clr-namespace:SuperButton.ViewModels"
        xmlns:models="clr-namespace:SuperButton.Models"
        mc:Ignorable="d"
        Title="Wizard" Height="Auto" Width="600"
        ResizeMode="NoResize"
        Closing="Window_Closing"
        Icon="./Themes/MotorController.png"
        WindowStartupLocation="CenterOwner"
        xmlns:common="clr-namespace:SuperButton.Common"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Helpers="clr-namespace:SuperButton.Helpers">

    <Window.Background>
        <ImageBrush ImageSource="pack://siteoforigin:,,,/Views/HomeBackground.jpg"/>
    </Window.Background>
    <Window.DataContext>
        <viewModels:WizardWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!-- Variables -->
        <System:Double x:Key="MotorParametersWidth">150</System:Double>
        <System:String x:Key="RegexFloat">^[0-9.]+$</System:String>
        <System:String x:Key="RegexInt">^[0-9]+$</System:String>

        <!--  Vertical GridSplitter Handle  -->
        <Style x:Key="VerticalGridSplitterHandleStyle" TargetType="ToggleButton">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="Root">

                            <!--  VSM  -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="Normal" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
                                                         Storyboard.TargetName="BackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.4" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
                                                         Storyboard.TargetName="BackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="IconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="180" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="IconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--  Background  -->
                                <Border x:Name="BackgroundBorder"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Gray"
                                    BorderBrush="#FF000000"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    Opacity="0" />

                                <!--"M0,6 L0,0 L3,3 Z" ->
                                    "M0,0 L6,0 L3,3 Z" |.-->
                                <Path HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M3,0 L6,3 L0,3 Z"
                                  Fill="Black"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stroke="Black">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="IconRotateTransform" Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ExtendedGridSplitter  -->
        <Style TargetType="common:CollapsableGridSplitter">
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="IsTabStop" Value="true" />
            <Setter Property="VerticalHandleStyle" Value="{StaticResource VerticalGridSplitterHandleStyle}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="common:CollapsableGridSplitter">
                        <ControlTemplate.Resources>
                            <LinearGradientBrush x:Key="splitterBackgroundBrush" MappingMode="RelativeToBoundingBox" StartPoint="0,1" EndPoint="1,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="#FF222222" />
                                        <GradientStop Offset="0.4" Color="#FF434343" />
                                        <GradientStop Offset="0.6" Color="#FF434343" />
                                        <GradientStop Offset="1" Color="#FF222222" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Root" >

                            <!--  VSM  -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Root"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!--  Background  -->
                            <Rectangle x:Name="GridSplitterBackground"
                                   Fill="{StaticResource splitterBackgroundBrush}"
                                   Stroke="#FF222222"
                                   StrokeMiterLimit="4"
                                   StrokeThickness="1" />

                            <!--  Horizontal Template  -->
                            <Grid x:Name="HorizontalTemplate" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  Horizontal GridSplitter Handle  -->
                                <ToggleButton x:Name="HorizontalGridSplitterHandler"
                                      
                                          Grid.Column="1"
                                          IsHitTestVisible="True"
                                          RenderTransformOrigin="0.5,0.5"
                                          Style="{TemplateBinding HorizontalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleY="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>

                            <!--  Vertical Template  -->
                            <Grid x:Name="VerticalTemplate">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  Vertical GridSplitter Handle  -->
                                <ToggleButton x:Name="VerticalGridSplitterHandle"
                                          Grid.Column="1"
                                          IsHitTestVisible="True"
                                          RenderTransformOrigin="0.5,0.5"
                                          Style="{TemplateBinding VerticalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleX="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>

                            <!--  Focus Visual  -->
                            <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   Stroke="{x:Null}"
                                   StrokeThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button Style-->
        <Style x:Key="ExampleToolbarButtonStyle"
           BasedOn="{StaticResource DefaultButtonStyle}"
           TargetType="Button">
            <Setter Property="Padding" Value="1" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Width" Value="110" />
            <Setter Property="MaxHeight" Value="28" />
            <Setter Property="Background" Value="Orange" />
        </Style>
        <Style x:Key="CalibButtonStyle"
           BasedOn="{StaticResource CalibButtonStyle}"
           TargetType="Button">
            <Setter Property="Padding" Value="1" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Width" Value="110" />
            <Setter Property="MaxHeight" Value="28" />
            <Setter Property="Background" Value="Orange" />
        </Style>

        <!--<viewModels:CutoffConverter x:Key="AgeConverter" Cutoff="2" />-->
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--#region Col_1-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="15"/>
            <!--#region Parameters-->
            <Border Grid.Row="1" Width="290" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Parameters" Foreground="White" Background="Gray"/>
                    <!--#region MotorParameters-->
                    <GroupBox Grid.Row="1" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                        <GroupBox.Header>
                            <Span FontWeight="Bold">Motor Parameters</Span>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="{x:Type RowDefinition}">
                                            <Setter Property="Height" Value="Auto" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MotorType}" Value="0">
                                                    <Setter Property="Height" Value="0" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                                <!-- Make Pole Pair visible or not -->
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Motor Type</TextBlock>
                            <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                              SelectedIndex="{Binding MotorType}"
                              Width="{StaticResource MotorParametersWidth}"
                              FontSize="12">
                                <ComboBoxItem Content="DC Brushed"/>
                                <ComboBoxItem Content="3 Phase Brushless"/>
                            </ComboBox>
                            <TextBlock Grid.Row="1" HorizontalAlignment="Left" 
                               VerticalAlignment="Center" 
                               Foreground="White" FontSize="12" 
                               Width="Auto" 
                               Text="Pole Pair">
                            </TextBlock>
                            <TextBox  Grid.Row="1" HorizontalAlignment="Right" BorderThickness="0"
                              Width="{StaticResource MotorParametersWidth}" 
                              FontSize="12" Text="{Binding PolePair, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Behaviors>
                                    <models:AllowableCharactersTextBoxBehavior RegularExpression="{StaticResource RegexInt}" MaxLength="12"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="2" HorizontalAlignment="Left" 
                               VerticalAlignment="Center" 
                               Foreground="White" FontSize="12" 
                               Width="Auto" 
                               Text="Continuous Current [A]"></TextBlock>
                            <TextBox Grid.Row="2" HorizontalAlignment="Right" BorderThickness="0"
                             Width="{StaticResource MotorParametersWidth}" 
                             FontSize="12" Text="{Binding ContinuousCurrent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Behaviors>
                                    <models:AllowableCharactersTextBoxBehavior RegularExpression="{StaticResource RegexFloat}" MaxLength="12"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto" Text="Max Speed [rpm]"></TextBlock>
                            <TextBox Grid.Row="3" HorizontalAlignment="Right" BorderThickness="0"
                              Width="{StaticResource MotorParametersWidth}" 
                              FontSize="12" Text="{Binding MaxSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Behaviors>
                                    <models:AllowableCharactersTextBoxBehavior RegularExpression="{StaticResource RegexInt}" MaxLength="12"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </Grid>
                    </GroupBox>
                    <!--#endregion MotorParameters-->
                    <!--#region MotorFeedbacks-->
                    <GroupBox Grid.Row="2" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                        <GroupBox.Header>
                            <Span FontWeight="Bold">Motor Feedbacks</Span>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="{x:Type RowDefinition}">
                                            <Setter Property="Height" Value="Auto" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MotorType}" Value="0">
                                                    <Setter Property="Height" Value="0" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                                <!-- Make Hall visible or not -->
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Hall</TextBlock>
                            <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding HallEnDis}">
                                <ComboBoxItem Content="Disable"></ComboBoxItem>
                                <ComboBoxItem Content="Enable"></ComboBoxItem>
                            </ComboBox>
                            <GroupBox Grid.Row="1" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                                <GroupBox.Header>
                                    <Span FontWeight="Bold">Encoder</Span>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Type</TextBlock>
                                    <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding EncoderFeedback}">
                                        <ComboBoxItem Content="None"></ComboBoxItem>
                                        <ComboBoxItem Content="Incremental 1">
                                            <!--<ComboBoxItem.Style>
                                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                    <Setter Property="ToolTip" Value="" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HallEnDis}" Value="0">
                                                            <Setter Property="ToolTip" Value="You cannot choose this option" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBoxItem.Style>-->
                                        </ComboBoxItem>
                                        <ComboBoxItem Content="Incremental Sin Cos"></ComboBoxItem>
                                        <ComboBoxItem Content="Absolute Sin Cos"></ComboBoxItem>
                                        <ComboBoxItem Content="Incremental 2"></ComboBoxItem>
                                        <ComboBoxItem Content="Ssi"></ComboBoxItem>
                                        <!--<ComboBoxItem Content="HALL">
                                            <ComboBoxItem.Style>
                                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Height" Value="auto" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MotorType}" Value="0">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                            <Setter Property="Height" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBoxItem.Style>
                                        </ComboBoxItem>
                                        <ComboBoxItem Content="INC encoder and HALL">
                                            <ComboBoxItem.Style>
                                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Height" Value="auto" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MotorType}" Value="0">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                            <Setter Property="Height" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBoxItem.Style>
                                        </ComboBoxItem>
                                        <ComboBoxItem Content="INC encoder">
                                            <ComboBoxItem.Style>
                                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Height" Value="auto" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MotorType}" Value="1">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                            <Setter Property="Height" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBoxItem.Style>
                                        </ComboBoxItem>
                                        <ComboBoxItem Content="SSI absolute encoder"></ComboBoxItem>-->
                                    </ComboBox>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Resolution [cnts/rev]</TextBlock>
                                    <TextBox Grid.Row="1" HorizontalAlignment="Right" BorderThickness="0"
                                            Width="{StaticResource MotorParametersWidth}" 
                                            FontSize="12"
                                            Text="{Binding EncoderResolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                                <Setter Property="IsReadOnly" Value="False" />
                                                <Setter Property="IsHitTestVisible" Value="True"/>
                                                <Setter Property="IsEnabled" Value="True"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding EncoderFeedback}" Value="3" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="IsReadOnly" Value="True" />
                                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding EncoderFeedback}" Value="0" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="IsReadOnly" Value="True" />
                                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <i:Interaction.Behaviors>
                                            <models:AllowableCharactersTextBoxBehavior RegularExpression="{StaticResource RegexInt}" MaxLength="12"/>
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </GroupBox>
                    <!--#endregion MotorFeedbacks-->
                </Grid>
            </Border>
            <!--#endregion Parameters-->
            <Grid Grid.Row="2" Height="15"/>
            <!--#region AdvancedConfiguration-->
            <Border Grid.Row="3" Width="Auto" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition>
                            <RowDefinition.Style>
                                <Style TargetType="{x:Type RowDefinition}">
                                    <Setter Property="Height" Value="Auto" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdvancedConfig}" Value="False">
                                            <Setter Property="Height" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Advanced Configuration" Foreground="White" Background="Gray"/>
                    <CheckBox  Grid.Row="0" HorizontalAlignment="Right" IsChecked="{Binding AdvancedConfig}"/>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <GroupBox Grid.Row="1" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                            <GroupBox.Header>
                                <Span FontWeight="Bold">External Encoder</Span>
                            </GroupBox.Header>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Type</TextBlock>
                                <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding ExternalEncoder}">
                                    <ComboBoxItem Content="None"></ComboBoxItem>
                                    <ComboBoxItem Content="Incremental 1"></ComboBoxItem>
                                    <ComboBoxItem Content="Incremental Sin Cos"></ComboBoxItem>
                                    <ComboBoxItem Content="Absolute Sin Cos"></ComboBoxItem>
                                    <ComboBoxItem Content="Incremental 2"></ComboBoxItem>
                                    <ComboBoxItem Content="Ssi"></ComboBoxItem>
                                </ComboBox>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Resolution [cnts/rev]</TextBlock>
                                <TextBox Grid.Row="1" HorizontalAlignment="Right" BorderThickness="0"
                                            Width="{StaticResource MotorParametersWidth}" 
                                            FontSize="12">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Setter Property="IsReadOnly" Value="False" />
                                            <Setter Property="IsHitTestVisible" Value="True"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Text" Value="{Binding ExternalResolution}"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ExternalEncoder}" Value="3" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsReadOnly" Value="True" />
                                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                        <Setter Property="Text" Value="4096"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ExternalEncoder}" Value="0" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsReadOnly" Value="True" />
                                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                        <Setter Property="Text" Value=""/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <i:Interaction.Behaviors>
                                        <models:AllowableCharactersTextBoxBehavior RegularExpression="{StaticResource RegexInt}" MaxLength="12"/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>
                        </GroupBox>
                        <!--#region Encoder-->
                        <GroupBox Grid.Row="2" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                            <GroupBox.Header>
                                <Span FontWeight="Bold">PI Loop Feedback</Span>
                            </GroupBox.Header>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Speed</TextBlock>
                                <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding ExternalSpeedLoop}">
                                    <ComboBoxItem Content="Hall"></ComboBoxItem>
                                    <ComboBoxItem Content="Motor"></ComboBoxItem>
                                    <ComboBoxItem Content="External"></ComboBoxItem>
                                </ComboBox>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Position</TextBlock>
                                <ComboBox Grid.Row="1" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding ExternalPositionLoop}">
                                    <ComboBoxItem Content="Hall"></ComboBoxItem>
                                    <ComboBoxItem Content="Motor"></ComboBoxItem>
                                    <ComboBoxItem Content="External"></ComboBoxItem>
                                </ComboBox>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Row="3" Width="Auto" Foreground="White" FontSize="12" Style="{x:Null}" BorderBrush="Transparent">
                            <GroupBox.Header>
                                <Span FontWeight="Bold">Control</Span>
                            </GroupBox.Header>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Drive Mode</TextBlock>
                                <ComboBox Grid.Row="0" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding ExternalDriveMode}">
                                    <ComboBoxItem Content="Current Control"></ComboBoxItem>
                                    <ComboBoxItem Content="Speed Control"></ComboBoxItem>
                                    <ComboBoxItem Content="Position Control"></ComboBoxItem>
                                </ComboBox>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Command Source</TextBlock>
                                <ComboBox Grid.Row="1" HorizontalAlignment="Right"
                                              Width="{StaticResource MotorParametersWidth}" 
                                              FontSize="12"
                                              SelectedIndex="{Binding ExternalCommandSource}">
                                    <ComboBoxItem Content="Digital"></ComboBoxItem>
                                    <ComboBoxItem Content="Analog"></ComboBoxItem>
                                </ComboBox>
                            </Grid>
                        </GroupBox>
                        <!--#endregion Encoder-->
                        <TextBlock Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Calibration Advanced Mode</TextBlock>
                        <CheckBox  Grid.Row="4" HorizontalAlignment="Right" IsChecked="{Binding CalibrationAdvancedMode}"/>
                    </Grid>
                </Grid>
            </Border>
            <!--#endregion AdvancedConfiguration-->
        </Grid>
        <!--#endregion Col_1-->
        <Grid Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="15"/>
            <Border Grid.Row="1" Width="auto" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Calibration" Foreground="White" Background="Gray" FontWeight="Bold"/>
                    <ItemsControl Grid.Row="1" Width="Auto" 
                                  ItemsSource="{Binding CalibList}" 
                                  ItemTemplate="{StaticResource CalibrationWizardViewModel}"/>
                    <Grid Grid.Row="3" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Helpers:RoundBoolLed Grid.Column="1" Width="10" Height="10" VerticalAlignment="Stretch"
                                              CurrStatus="{Binding ValidOperations}">
                        </Helpers:RoundBoolLed>
                        <!--   Command="{Binding Start}" -->
                        <Button FontSize="10" Grid.Column="3"
                            VerticalAlignment="Center" HorizontalAlignment="Left" 
                            BorderThickness="0.5" 
                            Width="50" Height="15"
                            Background="Orange"
                                IsEnabled="{Binding StartEnable}"
                                Command="{Binding Start}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource CalibButtonStyle}">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding StartEnable}">
                                                    <Condition.Value>false</Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Foreground" Value="White"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding Start}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                            <TextBlock Text="Start" VerticalAlignment="Center" Margin="0,-2,0,0"/>
                        </Button>
                        <Button FontSize="10" Grid.Column="5"
                            Command="{Binding Abort}"
                            VerticalAlignment="Center" HorizontalAlignment="Left" 
                            BorderThickness="0.5" 
                            Width="50" Height="15"
                                Background="Red">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource CalibButtonStyle}">
                                    <Setter Property="Foreground" Value="White"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding StartEnable}">
                                                        <Condition.Value>false</Condition.Value>
                                                    </Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock Text="Abort" VerticalAlignment="Center" Margin="0,-2,0,0"/>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            <Grid Grid.Row="2" Height="30">
                <!--<TextBox x:Name="Age" FontSize="12" Text="{Binding Age}" Margin="5">
                    -->
                <!--Foreground="{Binding Path=Age, Converter={StaticResource CutoffConverter}}">-->
                <!--<TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Foreground" Value="White"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Age, Converter={StaticResource AgeConverter}}">
                                    <DataTrigger.Value>true</DataTrigger.Value>
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>-->
                <!--
                </TextBox>-->
            </Grid>
        </Grid>


        <!-- Vertical GridSplitter -->
        <!--<common:CollapsableGridSplitter Grid.Column="4"              
			Width="9"
			HorizontalAlignment="Center"
			VerticalAlignment="Stretch"
			CollapseMode="Next"
			IsCollapsed="False"
			IsTabStop="False" 
            ResizeDirection="Columns"
            Cursor="Hand"
            ResizeBehavior="PreviousAndNext"/>-->
        <!-- Horizontal GridSplitter -->
        <!--<common:CollapsableGridSplitter x:Name="AdvanceConfigGridSplitter" Grid.Row="1"
                                        ResizeDirection="Rows"   
                                        Margin="0"  
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        CollapseMode="Next"
                                        Height="8"
                                        IsTabStop="False"
                                        AllowDrop="True"
                                        ResizeBehavior="PreviousAndNext">
                    
                    </common:CollapsableGridSplitter>-->
    </Grid>
</Window>
