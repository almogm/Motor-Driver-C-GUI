<Window x:Class="SuperButton.Wizard"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SuperButton"
        xmlns:viewModels="clr-namespace:SuperButton.ViewModels"
        xmlns:models="clr-namespace:SuperButton.Models"
        mc:Ignorable="d"
        Title="Wizard" Height="400" Width="500"
        Closing="Window_Closing"
        Icon="./Themes/MotorController.png"
        WindowStartupLocation="CenterOwner"
        xmlns:common="clr-namespace:SuperButton.Common"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <Window.Background>
        <ImageBrush ImageSource="pack://siteoforigin:,,,/Views/HomeBackground.jpg"/>
    </Window.Background>
    <Window.DataContext>
        <viewModels:WizardWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--  Vertical GridSplitter Handle  -->
        <Style x:Key="VerticalGridSplitterHandleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Root">

                            <!--  VSM  -->
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="Normal" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="0.4" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="180" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--  Background  -->
                                <Border x:Name="BackgroundBorder"
        							HorizontalAlignment="Stretch"
        							VerticalAlignment="Stretch"
        							Background="Gray"
        							BorderBrush="#FF000000"
        							BorderThickness="0"
        							CornerRadius="3"
        							Opacity="0" />

                                <!--  Vertical Handle Icon "M0,0 L6,0 L3,3 Z" -->
                                <Path HorizontalAlignment="Center"
        							VerticalAlignment="Center"
        							Data="M0,0 L0,6 L3,3 Z"
        							Fill="Black"
        							RenderTransformOrigin="0.5,0.5"
        							Stroke="Black">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="IconRotateTransform" Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  Horizontal GridSplitter Handle  -->
        <Style x:Key="HorizontalGridSplitterHandleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Root">

                            <!--  VSM  -->
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <System:String xml:space="preserve">.\sqlexpress </System:String>
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:00.2" To="Normal" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00.3"
        										Storyboard.TargetName="BackgroundBorder"
        										Storyboard.TargetProperty="Opacity"
        										To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="180" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="00:00:00"
        										Storyboard.TargetName="IconRotateTransform"
        										Storyboard.TargetProperty="Angle"
        										To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->

                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--  Background  -->
                                <Border x:Name="BackgroundBorder"
        							HorizontalAlignment="Stretch"
        							VerticalAlignment="Stretch"
        							Background="Gray"
        							BorderBrush="#FF000000"
        							BorderThickness="0"
        							CornerRadius="3"
        							Opacity="0" />
                                <!--  Vertical Handle Icon  -->
                                <Path HorizontalAlignment="Center"
        							VerticalAlignment="Center"
        							Data="M0,0 L6,0 L3,3 Z"
        							Fill="Black"
        							RenderTransformOrigin="0.5,0.5"
        							Stroke="Black">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="IconRotateTransform" Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ExtendedGridSplitter  -->
        <Style TargetType="{x:Type common:CollapsableGridSplitter}">
            <Setter Property="Background" Value="#FFFFFFFF" />
            <Setter Property="IsTabStop" Value="true" />
            <Setter Property="VerticalHandleStyle" Value="{StaticResource VerticalGridSplitterHandleStyle}" />
            <Setter Property="HorizontalHandleStyle" Value="{StaticResource HorizontalGridSplitterHandleStyle}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type common:CollapsableGridSplitter}">
                        <ControlTemplate.Resources>
                            <LinearGradientBrush x:Key="splitterBackgroundBrush" MappingMode="RelativeToBoundingBox" StartPoint="0,1" EndPoint="1,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0" Color="#FF222222" />
                                        <GradientStop Offset="0.4" Color="#FF434343" />
                                        <GradientStop Offset="0.6" Color="#FF434343" />
                                        <GradientStop Offset="1" Color="#FF222222" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
                            <!-- VSM -->
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                				Storyboard.TargetName="Root"
                                				Storyboard.TargetProperty="Opacity"
                                				To="0.5" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FocusVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            <!--  Background  -->
                            <Rectangle x:Name="GridSplitterBackground"
                        		Fill="{StaticResource splitterBackgroundBrush}"
                        		Stroke="#FF222222"
                        		StrokeMiterLimit="4"
                        		StrokeThickness="1" />
                            <!--  Horizontal Template  -->
                            <Grid x:Name="HorizontalTemplate" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  Horizontal GridSplitter Handle  -->
                                <ToggleButton x:Name="HorizontalGridSplitterHandle"
                        			Grid.Column="0"
                        			IsHitTestVisible="True"
                        			RenderTransformOrigin="0.5,0.5"
                        			Style="{TemplateBinding HorizontalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleY="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>
                            <!--  Vertical Template  -->
                            <Grid x:Name="VerticalTemplate">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--  Vertical GridSplitter Handle  -->
                                <ToggleButton x:Name="VerticalGridSplitterHandle"
                        			Grid.Row="1"
                        			IsHitTestVisible="True"
                        			RenderTransformOrigin="0.5,0.5"
                        			Style="{TemplateBinding VerticalHandleStyle}">
                                    <ToggleButton.RenderTransform>
                                        <ScaleTransform ScaleX="1" />
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </Grid>
                            <!--  Focus Visual  -->
                            <Rectangle x:Name="FocusVisual"
                        		IsHitTestVisible="false"
                        		Opacity="0"
                        		Stroke="#FF6DBDD1"
                        		StrokeThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="15"/>
            <Border Grid.Row="1" Width="230" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition>
                            <RowDefinition.Style>
                                <Style TargetType="{x:Type RowDefinition}">
                                    <Setter Property="Height" Value="Auto" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MotorType}" Value="0">
                                            <Setter Property="Height" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Motor Parameters" Foreground="White" Background="Gray"/>
                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Motor Type</TextBlock>
                    <ComboBox Grid.Row="1" HorizontalAlignment="Right"
                              SelectedIndex="{Binding MotorType}"
                              Width="100"
                              FontSize="12">
                        <ComboBoxItem Content="DC Brushed"/>
                        <ComboBoxItem Content="3 Phase Brushless"/>
                    </ComboBox>
                    <TextBlock Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto" Text="Pole Paire">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MotorType}" Value="0" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                        </TextBlock>
                    <TextBox  Grid.Row="2" HorizontalAlignment="Right" BorderThickness="0"
                              Width="100"
                              FontSize="12" Text="{Binding PolePaire, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <models:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9.\-]+$" MaxLength="12"/>
                        </i:Interaction.Behaviors>
                        <!--<TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MotorType}" Value="0" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>-->
                    </TextBox>
                    <TextBlock Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto" Text="Continuous Current [A]"></TextBlock>
                    <TextBox Grid.Row="3" HorizontalAlignment="Right" BorderThickness="0"
                              Width="100"
                              FontSize="12" Text="{Binding ContinuousCurrent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <models:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9.\-]+$" MaxLength="12"/>
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <TextBlock Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto" Text="Motor Speed [cts/sec]"></TextBlock>
                    <TextBox Grid.Row="4" HorizontalAlignment="Right" BorderThickness="0"
                              Width="100"
                              FontSize="12" Text="{Binding MotorSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <models:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9.\-]+$" MaxLength="12"/>
                        </i:Interaction.Behaviors>
                    </TextBox>
                    <TextBlock Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">Motor Feedbacks</TextBlock>
                    <ComboBox Grid.Row="5" HorizontalAlignment="Right"
                              Width="100"
                              FontSize="12"
                              SelectedIndex="{Binding MotorFeedbacks}">
                        <!--<ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="SelectedIndex" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MotorType}" Value="0">
                                        <Setter Property="SelectedIndex" Value="2" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>-->
                        <ComboBoxItem Content="HALL">
                            <ComboBoxItem.Style>
                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Height" Value="auto" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MotorType}" Value="0">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="Height" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBoxItem.Style>
                        </ComboBoxItem>
                        <ComboBoxItem Content="INC encoder and HALL">
                            <ComboBoxItem.Style>
                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Height" Value="auto" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MotorType}" Value="0">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="Height" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBoxItem.Style>
                        </ComboBoxItem>
                        <ComboBoxItem Content="INC encoder">
                            <ComboBoxItem.Style>
                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="Height" Value="auto" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MotorType}" Value="1">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="Height" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBoxItem.Style>
                        </ComboBoxItem>
                        <ComboBoxItem Content="SSI absolute encoder"></ComboBoxItem>
                    </ComboBox>
                    <TextBlock Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontSize="12" Width="Auto">cts/Motor Revolution</TextBlock>
                    <TextBox Grid.Row="6" HorizontalAlignment="Right" BorderThickness="0"
                              Width="100"
                              FontSize="12" Text="{Binding cts_Motor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <models:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9.\-]+$" MaxLength="12"/>
                        </i:Interaction.Behaviors>
                    </TextBox>
                </Grid>
            </Border>
            <Grid Grid.Row="2" Height="15"/>
            <Border Grid.Row="3" Width="Auto" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Advanced Config" Foreground="White" Background="Gray"/>
                    <!--<common:CollapsableGridSplitter Grid.Row="1"
                                        ResizeDirection="Rows"   
                                        Margin="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        CollapseMode="Next"
                                        IsCollapsed="False"
                                        IsTabStop="False" Height="auto"
                                        AllowDrop="True"
                                        ResizeBehavior="PreviousAndNext"
                                        />-->
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="15"/>
            <Border Grid.Row="1" Width="130" Height="auto" BorderBrush="Gray" BorderThickness="1" CornerRadius="4" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Width="Auto" Text="Calibration" Foreground="White" Background="Gray"/>
                </Grid>
            </Border>
        </Grid>
        <common:CollapsableGridSplitter Grid.Column="4"              
			Width="9"
			HorizontalAlignment="Center"
			VerticalAlignment="Stretch"
			CollapseMode="Next"
			IsCollapsed="False"
			IsTabStop="False" 
            ResizeDirection="Columns"
            Cursor="Hand"
            ResizeBehavior="PreviousAndNext"/>
    </Grid>
</Window>
